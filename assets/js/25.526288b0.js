(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{437:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("ul",[s("li",[t._v("正则表达式的定义共有两种："),s("code",[t._v("显示定义")]),t._v(" 和 "),s("code",[t._v("隐式定义")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \\d是正则表达式的元字符，用于匹配数据，相当于[0-9]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myregex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[0-9]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示定义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myregex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[0-9]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 隐试定义")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("何谓定位符？即限定某些字符出现的位置\n"),s("br"),t._v(" "),s("code",[t._v("^")]),t._v(" 表示必须以某字符开头；"),s("code",[t._v("$")]),t._v(" 表示必须以某字符结尾")])]),t._v(" "),s("li",[s("p",[t._v("何谓限定符？即限定某个字符或某类字符出现的次数\n"),s("br"),t._v(" "),s("code",[t._v("*")]),t._v(" 表示重复 0 次或任意次数"),s("br"),t._v(" "),s("code",[t._v("?")]),t._v(" 表示重复 0 次或至多 1 次"),s("br"),t._v(" "),s("code",[t._v("{n}")]),t._v(" 表示重复 n 次"),s("br"),t._v(" "),s("code",[t._v("{n,m}")]),t._v(" 表示重复 n-m 次")])]),t._v(" "),s("li",[s("p",[t._v("何谓分组？分组又称之为子表达式，即把一个正则表达式的全部或部分分成一个或者多个组\n"),s("br"),t._v("\n分组使用的字符为 "),s("code",[t._v("(")]),t._v(" 和 "),s("code",[t._v(")")]),t._v(" 。每一个子表达式都可以当一个整体来处理")])]),t._v(" "),s("li",[s("p",[t._v("其他")])])]),t._v(" "),s("p",[s("code",[t._v("[...]")]),t._v(" 是正则表达式的 "),s("code",[t._v("元字符")]),t._v("。"),s("code",[t._v("它会匹配方括号中所有字符")]),t._v(" "),s("br"),t._v(" "),s("code",[t._v("|")]),t._v(" 是正则表达式中的 "),s("code",[t._v("选择符")]),t._v("，用于二选一")]),t._v(" "),s("h3",{attrs:{id:"二、小数点后保留两位小数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、小数点后保留两位小数"}},[t._v("#")]),t._v(" "),s("strong",[t._v("二、小数点后保留两位小数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\\\\d"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\\\d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("$\n")])])]),s("h3",{attrs:{id:"_2-1、拆分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、拆分"}},[t._v("#")]),t._v(" "),s("strong",[t._v("2.1、拆分")])]),t._v(" "),s("p",[t._v("不管定位符和限定符，共可分为两组"),s("br"),t._v("\n第一大组 "),s("code",[t._v("(([1-9]{1}\\d*)|([0]{1}))")]),s("br"),t._v("\n第二大组 "),s("code",[t._v("(\\.(\\d){0,2})")])]),t._v(" "),s("h3",{attrs:{id:"_2-2、拆分第一大组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、拆分第一大组"}},[t._v("#")]),t._v(" "),s("strong",[t._v("2.2、拆分第一大组")])]),t._v(" "),s("p",[s("code",[t._v("(([1-9]{1}\\d*)|([0]{1}))")])]),t._v(" "),s("blockquote",[s("p",[t._v("第一部分\n"),s("code",[t._v("([1-9]{1}\\d*)")])]),t._v(" "),s("p",[s("code",[t._v("[1-9]{1}")]),t._v(" 表示 1-9 之前的数字只能出现一次，保证大于0")]),t._v(" "),s("p",[s("code",[t._v("\\d*")]),t._v(" 表示 0-9 之间的数字可以出现任意次")])]),t._v(" "),s("blockquote",[s("p",[t._v("第二部分 "),s("code",[t._v("|")])]),t._v(" "),s("p",[t._v("整数部分的两种情况，首位是0和首位不是0。如 "),s("code",[t._v("0.13")]),t._v(" "),s("code",[t._v("5.12")])])]),t._v(" "),s("blockquote",[s("p",[t._v("第三部分 "),s("code",[t._v("([0]{1})")])]),t._v(" "),s("p",[s("code",[t._v("([0]{1})")]),t._v(" 首位只能是0，只能有一个0。")]),t._v(" "),s("p",[t._v("一个字符没必要使用 "),s("code",[t._v("[]")]),t._v(" 可以直接写 "),s("code",[t._v("(0{1})")])])]),t._v(" "),s("p",[s("code",[t._v("第一大组匹配了整数部分的情况，大于0还是小于1的数")])]),t._v(" "),s("h3",{attrs:{id:"_2-3、拆分第二大组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3、拆分第二大组"}},[t._v("#")]),t._v(" "),s("strong",[t._v("2.3、拆分第二大组")])]),t._v(" "),s("p",[s("code",[t._v("(\\.(\\d){0,2})")])]),t._v(" "),s("blockquote",[s("p",[t._v("第一部分 "),s("code",[t._v("\\.")])]),t._v(" "),s("p",[s("code",[t._v(".")]),t._v(" 是正则表达式中的 元字符。会匹配除换行符意外的任意字符")]),t._v(" "),s("p",[t._v("此处需要匹配小数点，需要使用 "),s("code",[t._v("\\")]),t._v(" 反斜杠将它进行转义")])]),t._v(" "),s("blockquote",[s("p",[t._v("第二部分 "),s("code",[t._v("(\\d){0,2}")])]),t._v(" "),s("p",[t._v("匹配小数点后 0位或2位小数")]),t._v(" "),s("p",[t._v("如果要保留两位小数，可修改限定符 "),s("code",[t._v("\\.\\d{2}")])])]),t._v(" "),s("p",[s("br"),s("br")]),s("hr"),s("hr"),t._v(" "),s("p")])}),[],!1,null,null,null);s.default=n.exports}}]);